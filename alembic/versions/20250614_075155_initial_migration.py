"""initial_migration

Revision ID: 8621b321b683
Revises:
Create Date: 2025-06-14 07:51:55.962269+00:00

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8621b321b683"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "review_settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "review_count", sa.Integer(), nullable=False, comment="复习次数"
        ),
        sa.Column(
            "interval_days", sa.Integer(), nullable=False, comment="间隔天数"
        ),
        sa.Column(
            "description",
            sa.String(length=100),
            nullable=False,
            comment="设置描述",
        ),
        sa.Column(
            "is_active", sa.Boolean(), nullable=False, comment="是否启用"
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_review_settings_id"), "review_settings", ["id"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "openid",
            sa.String(length=64),
            nullable=False,
            comment="微信openid",
        ),
        sa.Column(
            "nickname", sa.String(length=64), nullable=True, comment="微信昵称"
        ),
        sa.Column(
            "avatar",
            sa.String(length=256),
            nullable=True,
            comment="微信头像url",
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_openid"), "users", ["openid"], unique=True)
    op.create_table(
        "cards",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "question", sa.String(length=100), nullable=False, comment="知识点"
        ),
        sa.Column(
            "answer", sa.String(length=500), nullable=False, comment="答案"
        ),
        sa.Column(
            "review_count", sa.Integer(), nullable=False, comment="复习次数"
        ),
        sa.Column(
            "first_review_at",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="首次复习时间",
        ),
        sa.Column(
            "next_review_at",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="下次复习时间",
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "user_id", sa.Integer(), nullable=False, comment="所属用户ID"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cards_id"), "cards", ["id"], unique=False)
    op.create_index(
        op.f("ix_cards_next_review_at"),
        "cards",
        ["next_review_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cards_question"), "cards", ["question"], unique=False
    )
    op.create_index(
        op.f("ix_cards_user_id"), "cards", ["user_id"], unique=False
    )
    op.create_table(
        "review_rules",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("review_count", sa.Integer(), nullable=False),
        sa.Column("interval_days", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "user_id", sa.Integer(), nullable=False, comment="所属用户ID"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_review_rules_id"), "review_rules", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_review_rules_review_count"),
        "review_rules",
        ["review_count"],
        unique=True,
    )
    op.create_index(
        op.f("ix_review_rules_user_id"),
        "review_rules",
        ["user_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_review_rules_user_id"), table_name="review_rules")
    op.drop_index(
        op.f("ix_review_rules_review_count"), table_name="review_rules"
    )
    op.drop_index(op.f("ix_review_rules_id"), table_name="review_rules")
    op.drop_table("review_rules")
    op.drop_index(op.f("ix_cards_user_id"), table_name="cards")
    op.drop_index(op.f("ix_cards_question"), table_name="cards")
    op.drop_index(op.f("ix_cards_next_review_at"), table_name="cards")
    op.drop_index(op.f("ix_cards_id"), table_name="cards")
    op.drop_table("cards")
    op.drop_index(op.f("ix_users_openid"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_review_settings_id"), table_name="review_settings")
    op.drop_table("review_settings")
    # ### end Alembic commands ###
